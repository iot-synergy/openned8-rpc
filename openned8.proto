syntax = "proto3";

package openned8;
option go_package="./openned8";

message Empty {}

message BaseMsg {
  string msg = 1;
}

message IdString {
  string id = 1;
}

message PageInfo {
  uint64 Page = 1;
  uint64 PageSize = 2;
}

message SdkUsage {
  string UserId = 1;
  int64 All = 2;
  int64 Used = 3;
}

message AppInfo {
  string Id = 1;
  int64 CreatedAt = 2;
  int64 UpdatedAt = 3;
  string UserId = 4;
  string AppName = 5;
  string Summary = 6;
  int64 AppCategory = 7;
  int64 UseIndustry = 8;
  string AppCategoryName = 9;
  string UseIndustryName = 10;
  string AppKey = 11;
  string AppSecret = 12;
}

message AppInfoCreateReq {
  string UserId = 1;
  string AppName = 2;
  string Summary = 3;
  int64 AppCategory = 4;
  int64 UseIndustry = 5;
}

message AppInfoUpdateReq {
  string Id = 1;
  string UserId = 2;
  string AppName = 3;
  string Summary = 4;
  int64 AppCategory = 5;
  int64 UseIndustry = 6;
}

message AppInfoDeleteReq {
  string Id = 1;
  string UserId = 2;
}

message AppListReq {
  PageInfo PageInfo = 1;
  string AppName = 2;
  string AppCategoryName = 3;
  string UseIndustryName = 4;
  string UserId = 5;
}
message ApplistInfo {
  uint64 Total = 1;
  repeated AppInfo Data = 2;
}

message CategorylistResp {
  repeated CategoryInfo Data = 1;
}

message CategoryInfo {
  int64 Id = 1;
  string Name = 2;
}

message IndustrylistResp {
  repeated IndustryInfo Data = 1;
}

message IndustryInfo {
  int64 Id = 1;
  string Name = 2;
}

message AppBindSdkReq {
  string appId = 1;
  string sdkId = 2;
}

message ActiveCodeListReq {
  PageInfo PageInfo = 1;
  string UserId = 2;
  string AppId = 3;
  string AppSdkId = 4;
  int64 Status = 5;
  int64 ExpireDate = 6;
}

message ActiveCodeListInfo {
  uint64 Total = 1;
  repeated ActiveCodeInfo Data = 2;
}
message ActiveCodeResp {
  int32 code = 1;
  string msg = 2;
  repeated ActiveCodeInfo data = 3;
}
message ActiveCodeInfo {
  string Id = 1;
  int64 CreatedAt = 2;
  int64 UpdatedAt = 3;
  string ActiveKey = 4;
  string UserId = 5;
  string AppId = 6;
  string ActiveIP = 7;
  string DeviceSN = 8;
  string DeviceMac = 9;
  string DeviceIdentity = 10;
  int64 ActiveDate = 11;
  int64 ActiveType = 12;
  string ActiveFile = 13;
  string Version = 14;
  int64 StartDate = 15;
  int64 ExpireDate = 16;
  int64 Status = 17;
  string AppSdkId = 18;
}

message ActiveCodeCreatReq {
  string UserId = 1;
  int32 Quantity = 2;
  string AppId = 3;
  string SdkId = 4;
}

message UserSdkUsageQueryReq {
  string UserId = 1;
}

message UserSdkUsageUpdateReq {
  string UserId = 1;
  int64 All = 2;
}

message SdkInfoCreateReq {
  string name = 1;
  string avatar = 2;
  string desc = 3;
  string download_url = 4;
}

message SdkInfo {
  string id = 1;
  string name = 2;
  string avatar = 3;
  string desc = 4;
  string download_url = 5;
}

message AppSdkInfo {
  string id = 1;
  string appId = 2;
  string appName = 3;
  string sdkId = 4;
  string sdkName = 5;
  string sdkKey = 6;
  string sdkAvatar = 7;
  string sdkDesc = 8;
  string download_url = 9;

}

message SdkListQueryReq{
  uint64 Page = 1;
  uint64 PageSize = 2;
}

message SdkListResp {
  int64 count = 1;
  repeated SdkInfo data = 2;
}

message AppSdkListResp {
  int64 count = 1;
  repeated AppSdkInfo data = 2;
}

message SdkQueryByAppReq {
  uint64 Page = 1;
  uint64 PageSize = 2;
  string AppId = 3;
  string UserId = 4;
}

message DownloadCodeByAppIdReq {
  string AppId = 1;
  string UserId = 2;
}

message DownloadCodeByAppIdResp {
  repeated DownloadCode data = 1;
}

message DownloadCode {
  string AppKey = 1;
  string SdkKey = 2;
  string Code = 3;
}

message QuerySdkKeyByAppIdAndActiveCodeReq {
  string appId = 1;
  string activeCode = 2;
}

message BaseString{
  string data = 1;
}

message ActiveDeviceReq {
  string appId = 1;
  string sdkKey = 2;
  string activeCode = 3;
  string imei = 4;
  string deviceSn = 5;
}

message ActiveDeviceResp {}

service openned8 {
  // group: base
  rpc initDatabase (Empty) returns (BaseMsg);
  // group: developer
  rpc appCreate (AppInfoCreateReq) returns (AppInfo);
  // group: developer
  rpc appUpdate (AppInfoUpdateReq) returns (AppInfo);
  // group: developer
  rpc appDelete (AppInfoDeleteReq) returns (BaseMsg);
  // group: developer
  rpc appQuery (AppListReq) returns (ApplistInfo);
  // group: developer
  rpc categoryQuery (Empty) returns (CategorylistResp);
  // group: developer
  rpc industryQuery (Empty) returns (IndustrylistResp);
  // group: developer
  rpc activeCodeQuery (ActiveCodeListReq) returns (ActiveCodeListInfo);
  // group: developer
  rpc activeCodeCreat (ActiveCodeCreatReq) returns (ActiveCodeResp);
  // group: developer
  rpc downloadCodeByAppId(DownloadCodeByAppIdReq) returns (DownloadCodeByAppIdResp);
  // group: developer
  rpc sdkListQuery(SdkListQueryReq) returns (SdkListResp);
  // group: developer
  rpc sdkQueryByApp(SdkQueryByAppReq) returns (AppSdkListResp);
  // group: developer
  rpc appBindSdk(AppBindSdkReq) returns (AppSdkInfo);
  // group: admin
  rpc queryUserSdkUsage(UserSdkUsageQueryReq) returns (SdkUsage);
  // group: admin
  rpc updateUserSdkUsage(UserSdkUsageUpdateReq) returns (SdkUsage);
  // group: admin
  rpc createSdk (SdkInfoCreateReq) returns (SdkInfo);
  // group: common
  rpc querySdkKeyByAppIdAndActiveCode (QuerySdkKeyByAppIdAndActiveCodeReq) returns (BaseString);
  // group: common
  rpc queryAppSdkByActiveCode (QuerySdkKeyByAppIdAndActiveCodeReq) returns (AppSdkInfo);
  // group: common
  rpc activeDevice (ActiveDeviceReq) returns (ActiveDeviceResp);
}