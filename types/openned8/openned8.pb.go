// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.19.4
// source: openned8.proto

package openned8

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openned8_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_openned8_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_openned8_proto_rawDescGZIP(), []int{0}
}

type BaseMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg"`
}

func (x *BaseMsg) Reset() {
	*x = BaseMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openned8_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseMsg) ProtoMessage() {}

func (x *BaseMsg) ProtoReflect() protoreflect.Message {
	mi := &file_openned8_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseMsg.ProtoReflect.Descriptor instead.
func (*BaseMsg) Descriptor() ([]byte, []int) {
	return file_openned8_proto_rawDescGZIP(), []int{1}
}

func (x *BaseMsg) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type IdString struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
}

func (x *IdString) Reset() {
	*x = IdString{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openned8_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdString) ProtoMessage() {}

func (x *IdString) ProtoReflect() protoreflect.Message {
	mi := &file_openned8_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdString.ProtoReflect.Descriptor instead.
func (*IdString) Descriptor() ([]byte, []int) {
	return file_openned8_proto_rawDescGZIP(), []int{2}
}

func (x *IdString) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type PageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     uint64 `protobuf:"varint,1,opt,name=Page,proto3" json:"Page"`
	PageSize uint64 `protobuf:"varint,2,opt,name=PageSize,proto3" json:"PageSize"`
}

func (x *PageInfo) Reset() {
	*x = PageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openned8_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageInfo) ProtoMessage() {}

func (x *PageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_openned8_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageInfo.ProtoReflect.Descriptor instead.
func (*PageInfo) Descriptor() ([]byte, []int) {
	return file_openned8_proto_rawDescGZIP(), []int{3}
}

func (x *PageInfo) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PageInfo) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type SdkUsage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId"`
	All    int64  `protobuf:"varint,2,opt,name=All,proto3" json:"All"`
	Used   int64  `protobuf:"varint,3,opt,name=Used,proto3" json:"Used"`
}

func (x *SdkUsage) Reset() {
	*x = SdkUsage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openned8_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SdkUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SdkUsage) ProtoMessage() {}

func (x *SdkUsage) ProtoReflect() protoreflect.Message {
	mi := &file_openned8_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SdkUsage.ProtoReflect.Descriptor instead.
func (*SdkUsage) Descriptor() ([]byte, []int) {
	return file_openned8_proto_rawDescGZIP(), []int{4}
}

func (x *SdkUsage) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SdkUsage) GetAll() int64 {
	if x != nil {
		return x.All
	}
	return 0
}

func (x *SdkUsage) GetUsed() int64 {
	if x != nil {
		return x.Used
	}
	return 0
}

type AppInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id"`
	CreatedAt       int64  `protobuf:"varint,2,opt,name=CreatedAt,proto3" json:"CreatedAt"`
	UpdatedAt       int64  `protobuf:"varint,3,opt,name=UpdatedAt,proto3" json:"UpdatedAt"`
	UserId          string `protobuf:"bytes,4,opt,name=UserId,proto3" json:"UserId"`
	AppName         string `protobuf:"bytes,5,opt,name=AppName,proto3" json:"AppName"`
	Summary         string `protobuf:"bytes,6,opt,name=Summary,proto3" json:"Summary"`
	AppCategory     int64  `protobuf:"varint,7,opt,name=AppCategory,proto3" json:"AppCategory"`
	UseIndustry     int64  `protobuf:"varint,8,opt,name=UseIndustry,proto3" json:"UseIndustry"`
	AppCategoryName string `protobuf:"bytes,9,opt,name=AppCategoryName,proto3" json:"AppCategoryName"`
	UseIndustryName string `protobuf:"bytes,10,opt,name=UseIndustryName,proto3" json:"UseIndustryName"`
	AppKey          string `protobuf:"bytes,11,opt,name=AppKey,proto3" json:"AppKey"`
	AppSecret       string `protobuf:"bytes,12,opt,name=AppSecret,proto3" json:"AppSecret"`
}

func (x *AppInfo) Reset() {
	*x = AppInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openned8_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppInfo) ProtoMessage() {}

func (x *AppInfo) ProtoReflect() protoreflect.Message {
	mi := &file_openned8_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppInfo.ProtoReflect.Descriptor instead.
func (*AppInfo) Descriptor() ([]byte, []int) {
	return file_openned8_proto_rawDescGZIP(), []int{5}
}

func (x *AppInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AppInfo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *AppInfo) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *AppInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AppInfo) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *AppInfo) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *AppInfo) GetAppCategory() int64 {
	if x != nil {
		return x.AppCategory
	}
	return 0
}

func (x *AppInfo) GetUseIndustry() int64 {
	if x != nil {
		return x.UseIndustry
	}
	return 0
}

func (x *AppInfo) GetAppCategoryName() string {
	if x != nil {
		return x.AppCategoryName
	}
	return ""
}

func (x *AppInfo) GetUseIndustryName() string {
	if x != nil {
		return x.UseIndustryName
	}
	return ""
}

func (x *AppInfo) GetAppKey() string {
	if x != nil {
		return x.AppKey
	}
	return ""
}

func (x *AppInfo) GetAppSecret() string {
	if x != nil {
		return x.AppSecret
	}
	return ""
}

type AppInfoCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId"`
	AppName     string `protobuf:"bytes,2,opt,name=AppName,proto3" json:"AppName"`
	Summary     string `protobuf:"bytes,3,opt,name=Summary,proto3" json:"Summary"`
	AppCategory int64  `protobuf:"varint,4,opt,name=AppCategory,proto3" json:"AppCategory"`
	UseIndustry int64  `protobuf:"varint,5,opt,name=UseIndustry,proto3" json:"UseIndustry"`
}

func (x *AppInfoCreateReq) Reset() {
	*x = AppInfoCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openned8_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppInfoCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppInfoCreateReq) ProtoMessage() {}

func (x *AppInfoCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_openned8_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppInfoCreateReq.ProtoReflect.Descriptor instead.
func (*AppInfoCreateReq) Descriptor() ([]byte, []int) {
	return file_openned8_proto_rawDescGZIP(), []int{6}
}

func (x *AppInfoCreateReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AppInfoCreateReq) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *AppInfoCreateReq) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *AppInfoCreateReq) GetAppCategory() int64 {
	if x != nil {
		return x.AppCategory
	}
	return 0
}

func (x *AppInfoCreateReq) GetUseIndustry() int64 {
	if x != nil {
		return x.UseIndustry
	}
	return 0
}

type AppInfoUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id"`
	UserId      string `protobuf:"bytes,2,opt,name=UserId,proto3" json:"UserId"`
	AppName     string `protobuf:"bytes,3,opt,name=AppName,proto3" json:"AppName"`
	Summary     string `protobuf:"bytes,4,opt,name=Summary,proto3" json:"Summary"`
	AppCategory int64  `protobuf:"varint,5,opt,name=AppCategory,proto3" json:"AppCategory"`
	UseIndustry int64  `protobuf:"varint,6,opt,name=UseIndustry,proto3" json:"UseIndustry"`
}

func (x *AppInfoUpdateReq) Reset() {
	*x = AppInfoUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openned8_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppInfoUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppInfoUpdateReq) ProtoMessage() {}

func (x *AppInfoUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_openned8_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppInfoUpdateReq.ProtoReflect.Descriptor instead.
func (*AppInfoUpdateReq) Descriptor() ([]byte, []int) {
	return file_openned8_proto_rawDescGZIP(), []int{7}
}

func (x *AppInfoUpdateReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AppInfoUpdateReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AppInfoUpdateReq) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *AppInfoUpdateReq) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *AppInfoUpdateReq) GetAppCategory() int64 {
	if x != nil {
		return x.AppCategory
	}
	return 0
}

func (x *AppInfoUpdateReq) GetUseIndustry() int64 {
	if x != nil {
		return x.UseIndustry
	}
	return 0
}

type AppInfoDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id"`
	UserId string `protobuf:"bytes,2,opt,name=UserId,proto3" json:"UserId"`
}

func (x *AppInfoDeleteReq) Reset() {
	*x = AppInfoDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openned8_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppInfoDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppInfoDeleteReq) ProtoMessage() {}

func (x *AppInfoDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_openned8_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppInfoDeleteReq.ProtoReflect.Descriptor instead.
func (*AppInfoDeleteReq) Descriptor() ([]byte, []int) {
	return file_openned8_proto_rawDescGZIP(), []int{8}
}

func (x *AppInfoDeleteReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AppInfoDeleteReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type AppListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageInfo        *PageInfo `protobuf:"bytes,1,opt,name=PageInfo,proto3" json:"PageInfo"`
	AppName         string    `protobuf:"bytes,2,opt,name=AppName,proto3" json:"AppName"`
	AppCategoryName string    `protobuf:"bytes,3,opt,name=AppCategoryName,proto3" json:"AppCategoryName"`
	UseIndustryName string    `protobuf:"bytes,4,opt,name=UseIndustryName,proto3" json:"UseIndustryName"`
	UserId          string    `protobuf:"bytes,5,opt,name=UserId,proto3" json:"UserId"`
}

func (x *AppListReq) Reset() {
	*x = AppListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openned8_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppListReq) ProtoMessage() {}

func (x *AppListReq) ProtoReflect() protoreflect.Message {
	mi := &file_openned8_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppListReq.ProtoReflect.Descriptor instead.
func (*AppListReq) Descriptor() ([]byte, []int) {
	return file_openned8_proto_rawDescGZIP(), []int{9}
}

func (x *AppListReq) GetPageInfo() *PageInfo {
	if x != nil {
		return x.PageInfo
	}
	return nil
}

func (x *AppListReq) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *AppListReq) GetAppCategoryName() string {
	if x != nil {
		return x.AppCategoryName
	}
	return ""
}

func (x *AppListReq) GetUseIndustryName() string {
	if x != nil {
		return x.UseIndustryName
	}
	return ""
}

func (x *AppListReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type ApplistInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint64     `protobuf:"varint,1,opt,name=Total,proto3" json:"Total"`
	Data  []*AppInfo `protobuf:"bytes,2,rep,name=Data,proto3" json:"Data"`
}

func (x *ApplistInfo) Reset() {
	*x = ApplistInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openned8_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplistInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplistInfo) ProtoMessage() {}

func (x *ApplistInfo) ProtoReflect() protoreflect.Message {
	mi := &file_openned8_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplistInfo.ProtoReflect.Descriptor instead.
func (*ApplistInfo) Descriptor() ([]byte, []int) {
	return file_openned8_proto_rawDescGZIP(), []int{10}
}

func (x *ApplistInfo) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ApplistInfo) GetData() []*AppInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type CategorylistResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*CategoryInfo `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data"`
}

func (x *CategorylistResp) Reset() {
	*x = CategorylistResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openned8_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategorylistResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategorylistResp) ProtoMessage() {}

func (x *CategorylistResp) ProtoReflect() protoreflect.Message {
	mi := &file_openned8_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategorylistResp.ProtoReflect.Descriptor instead.
func (*CategorylistResp) Descriptor() ([]byte, []int) {
	return file_openned8_proto_rawDescGZIP(), []int{11}
}

func (x *CategorylistResp) GetData() []*CategoryInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type CategoryInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id"`
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name"`
}

func (x *CategoryInfo) Reset() {
	*x = CategoryInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openned8_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryInfo) ProtoMessage() {}

func (x *CategoryInfo) ProtoReflect() protoreflect.Message {
	mi := &file_openned8_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryInfo.ProtoReflect.Descriptor instead.
func (*CategoryInfo) Descriptor() ([]byte, []int) {
	return file_openned8_proto_rawDescGZIP(), []int{12}
}

func (x *CategoryInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CategoryInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type IndustrylistResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*IndustryInfo `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data"`
}

func (x *IndustrylistResp) Reset() {
	*x = IndustrylistResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openned8_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndustrylistResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndustrylistResp) ProtoMessage() {}

func (x *IndustrylistResp) ProtoReflect() protoreflect.Message {
	mi := &file_openned8_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndustrylistResp.ProtoReflect.Descriptor instead.
func (*IndustrylistResp) Descriptor() ([]byte, []int) {
	return file_openned8_proto_rawDescGZIP(), []int{13}
}

func (x *IndustrylistResp) GetData() []*IndustryInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type IndustryInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id"`
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name"`
}

func (x *IndustryInfo) Reset() {
	*x = IndustryInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openned8_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndustryInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndustryInfo) ProtoMessage() {}

func (x *IndustryInfo) ProtoReflect() protoreflect.Message {
	mi := &file_openned8_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndustryInfo.ProtoReflect.Descriptor instead.
func (*IndustryInfo) Descriptor() ([]byte, []int) {
	return file_openned8_proto_rawDescGZIP(), []int{14}
}

func (x *IndustryInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *IndustryInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type AppBindSdkReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId string `protobuf:"bytes,1,opt,name=appId,proto3" json:"appId"`
	SdkId string `protobuf:"bytes,2,opt,name=sdkId,proto3" json:"sdkId"`
}

func (x *AppBindSdkReq) Reset() {
	*x = AppBindSdkReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openned8_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppBindSdkReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppBindSdkReq) ProtoMessage() {}

func (x *AppBindSdkReq) ProtoReflect() protoreflect.Message {
	mi := &file_openned8_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppBindSdkReq.ProtoReflect.Descriptor instead.
func (*AppBindSdkReq) Descriptor() ([]byte, []int) {
	return file_openned8_proto_rawDescGZIP(), []int{15}
}

func (x *AppBindSdkReq) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *AppBindSdkReq) GetSdkId() string {
	if x != nil {
		return x.SdkId
	}
	return ""
}

type ActiveCodeListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageInfo   *PageInfo `protobuf:"bytes,1,opt,name=PageInfo,proto3" json:"PageInfo"`
	UserId     string    `protobuf:"bytes,2,opt,name=UserId,proto3" json:"UserId"`
	AppId      string    `protobuf:"bytes,3,opt,name=AppId,proto3" json:"AppId"`
	AppSdkId   string    `protobuf:"bytes,4,opt,name=AppSdkId,proto3" json:"AppSdkId"`
	Status     int64     `protobuf:"varint,5,opt,name=Status,proto3" json:"Status"`
	ExpireDate int64     `protobuf:"varint,6,opt,name=ExpireDate,proto3" json:"ExpireDate"`
}

func (x *ActiveCodeListReq) Reset() {
	*x = ActiveCodeListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openned8_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActiveCodeListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActiveCodeListReq) ProtoMessage() {}

func (x *ActiveCodeListReq) ProtoReflect() protoreflect.Message {
	mi := &file_openned8_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActiveCodeListReq.ProtoReflect.Descriptor instead.
func (*ActiveCodeListReq) Descriptor() ([]byte, []int) {
	return file_openned8_proto_rawDescGZIP(), []int{16}
}

func (x *ActiveCodeListReq) GetPageInfo() *PageInfo {
	if x != nil {
		return x.PageInfo
	}
	return nil
}

func (x *ActiveCodeListReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ActiveCodeListReq) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *ActiveCodeListReq) GetAppSdkId() string {
	if x != nil {
		return x.AppSdkId
	}
	return ""
}

func (x *ActiveCodeListReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ActiveCodeListReq) GetExpireDate() int64 {
	if x != nil {
		return x.ExpireDate
	}
	return 0
}

type ActiveCodeListInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint64            `protobuf:"varint,1,opt,name=Total,proto3" json:"Total"`
	Data  []*ActiveCodeInfo `protobuf:"bytes,2,rep,name=Data,proto3" json:"Data"`
}

func (x *ActiveCodeListInfo) Reset() {
	*x = ActiveCodeListInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openned8_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActiveCodeListInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActiveCodeListInfo) ProtoMessage() {}

func (x *ActiveCodeListInfo) ProtoReflect() protoreflect.Message {
	mi := &file_openned8_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActiveCodeListInfo.ProtoReflect.Descriptor instead.
func (*ActiveCodeListInfo) Descriptor() ([]byte, []int) {
	return file_openned8_proto_rawDescGZIP(), []int{17}
}

func (x *ActiveCodeListInfo) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ActiveCodeListInfo) GetData() []*ActiveCodeInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type ActiveCodeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32             `protobuf:"varint,1,opt,name=code,proto3" json:"code"`
	Msg  string            `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg"`
	Data []*ActiveCodeInfo `protobuf:"bytes,3,rep,name=data,proto3" json:"data"`
}

func (x *ActiveCodeResp) Reset() {
	*x = ActiveCodeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openned8_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActiveCodeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActiveCodeResp) ProtoMessage() {}

func (x *ActiveCodeResp) ProtoReflect() protoreflect.Message {
	mi := &file_openned8_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActiveCodeResp.ProtoReflect.Descriptor instead.
func (*ActiveCodeResp) Descriptor() ([]byte, []int) {
	return file_openned8_proto_rawDescGZIP(), []int{18}
}

func (x *ActiveCodeResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ActiveCodeResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ActiveCodeResp) GetData() []*ActiveCodeInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type ActiveCodeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id"`
	CreatedAt      int64  `protobuf:"varint,2,opt,name=CreatedAt,proto3" json:"CreatedAt"`
	UpdatedAt      int64  `protobuf:"varint,3,opt,name=UpdatedAt,proto3" json:"UpdatedAt"`
	ActiveKey      string `protobuf:"bytes,4,opt,name=ActiveKey,proto3" json:"ActiveKey"`
	UserId         string `protobuf:"bytes,5,opt,name=UserId,proto3" json:"UserId"`
	AppId          string `protobuf:"bytes,6,opt,name=AppId,proto3" json:"AppId"`
	ActiveIP       string `protobuf:"bytes,7,opt,name=ActiveIP,proto3" json:"ActiveIP"`
	DeviceSN       string `protobuf:"bytes,8,opt,name=DeviceSN,proto3" json:"DeviceSN"`
	DeviceMac      string `protobuf:"bytes,9,opt,name=DeviceMac,proto3" json:"DeviceMac"`
	DeviceIdentity string `protobuf:"bytes,10,opt,name=DeviceIdentity,proto3" json:"DeviceIdentity"`
	ActiveDate     int64  `protobuf:"varint,11,opt,name=ActiveDate,proto3" json:"ActiveDate"`
	ActiveType     int64  `protobuf:"varint,12,opt,name=ActiveType,proto3" json:"ActiveType"`
	ActiveFile     string `protobuf:"bytes,13,opt,name=ActiveFile,proto3" json:"ActiveFile"`
	Version        string `protobuf:"bytes,14,opt,name=Version,proto3" json:"Version"`
	StartDate      int64  `protobuf:"varint,15,opt,name=StartDate,proto3" json:"StartDate"`
	ExpireDate     int64  `protobuf:"varint,16,opt,name=ExpireDate,proto3" json:"ExpireDate"`
	Status         int64  `protobuf:"varint,17,opt,name=Status,proto3" json:"Status"`
	AppSdkId       string `protobuf:"bytes,18,opt,name=AppSdkId,proto3" json:"AppSdkId"`
}

func (x *ActiveCodeInfo) Reset() {
	*x = ActiveCodeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openned8_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActiveCodeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActiveCodeInfo) ProtoMessage() {}

func (x *ActiveCodeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_openned8_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActiveCodeInfo.ProtoReflect.Descriptor instead.
func (*ActiveCodeInfo) Descriptor() ([]byte, []int) {
	return file_openned8_proto_rawDescGZIP(), []int{19}
}

func (x *ActiveCodeInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ActiveCodeInfo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ActiveCodeInfo) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *ActiveCodeInfo) GetActiveKey() string {
	if x != nil {
		return x.ActiveKey
	}
	return ""
}

func (x *ActiveCodeInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ActiveCodeInfo) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *ActiveCodeInfo) GetActiveIP() string {
	if x != nil {
		return x.ActiveIP
	}
	return ""
}

func (x *ActiveCodeInfo) GetDeviceSN() string {
	if x != nil {
		return x.DeviceSN
	}
	return ""
}

func (x *ActiveCodeInfo) GetDeviceMac() string {
	if x != nil {
		return x.DeviceMac
	}
	return ""
}

func (x *ActiveCodeInfo) GetDeviceIdentity() string {
	if x != nil {
		return x.DeviceIdentity
	}
	return ""
}

func (x *ActiveCodeInfo) GetActiveDate() int64 {
	if x != nil {
		return x.ActiveDate
	}
	return 0
}

func (x *ActiveCodeInfo) GetActiveType() int64 {
	if x != nil {
		return x.ActiveType
	}
	return 0
}

func (x *ActiveCodeInfo) GetActiveFile() string {
	if x != nil {
		return x.ActiveFile
	}
	return ""
}

func (x *ActiveCodeInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ActiveCodeInfo) GetStartDate() int64 {
	if x != nil {
		return x.StartDate
	}
	return 0
}

func (x *ActiveCodeInfo) GetExpireDate() int64 {
	if x != nil {
		return x.ExpireDate
	}
	return 0
}

func (x *ActiveCodeInfo) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ActiveCodeInfo) GetAppSdkId() string {
	if x != nil {
		return x.AppSdkId
	}
	return ""
}

type ActiveCodeCreatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId"`
	Quantity int32  `protobuf:"varint,2,opt,name=Quantity,proto3" json:"Quantity"`
	AppId    string `protobuf:"bytes,3,opt,name=AppId,proto3" json:"AppId"`
	SdkId    string `protobuf:"bytes,4,opt,name=SdkId,proto3" json:"SdkId"`
}

func (x *ActiveCodeCreatReq) Reset() {
	*x = ActiveCodeCreatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openned8_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActiveCodeCreatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActiveCodeCreatReq) ProtoMessage() {}

func (x *ActiveCodeCreatReq) ProtoReflect() protoreflect.Message {
	mi := &file_openned8_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActiveCodeCreatReq.ProtoReflect.Descriptor instead.
func (*ActiveCodeCreatReq) Descriptor() ([]byte, []int) {
	return file_openned8_proto_rawDescGZIP(), []int{20}
}

func (x *ActiveCodeCreatReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ActiveCodeCreatReq) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *ActiveCodeCreatReq) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *ActiveCodeCreatReq) GetSdkId() string {
	if x != nil {
		return x.SdkId
	}
	return ""
}

type UserSdkUsageQueryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId"`
}

func (x *UserSdkUsageQueryReq) Reset() {
	*x = UserSdkUsageQueryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openned8_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSdkUsageQueryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSdkUsageQueryReq) ProtoMessage() {}

func (x *UserSdkUsageQueryReq) ProtoReflect() protoreflect.Message {
	mi := &file_openned8_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSdkUsageQueryReq.ProtoReflect.Descriptor instead.
func (*UserSdkUsageQueryReq) Descriptor() ([]byte, []int) {
	return file_openned8_proto_rawDescGZIP(), []int{21}
}

func (x *UserSdkUsageQueryReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type UserSdkUsageUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId"`
	All    int64  `protobuf:"varint,2,opt,name=All,proto3" json:"All"`
}

func (x *UserSdkUsageUpdateReq) Reset() {
	*x = UserSdkUsageUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openned8_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSdkUsageUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSdkUsageUpdateReq) ProtoMessage() {}

func (x *UserSdkUsageUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_openned8_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSdkUsageUpdateReq.ProtoReflect.Descriptor instead.
func (*UserSdkUsageUpdateReq) Descriptor() ([]byte, []int) {
	return file_openned8_proto_rawDescGZIP(), []int{22}
}

func (x *UserSdkUsageUpdateReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserSdkUsageUpdateReq) GetAll() int64 {
	if x != nil {
		return x.All
	}
	return 0
}

type SdkInfoCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	Avatar      string `protobuf:"bytes,2,opt,name=avatar,proto3" json:"avatar"`
	Desc        string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc"`
	DownloadUrl string `protobuf:"bytes,4,opt,name=download_url,json=downloadUrl,proto3" json:"download_url"`
}

func (x *SdkInfoCreateReq) Reset() {
	*x = SdkInfoCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openned8_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SdkInfoCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SdkInfoCreateReq) ProtoMessage() {}

func (x *SdkInfoCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_openned8_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SdkInfoCreateReq.ProtoReflect.Descriptor instead.
func (*SdkInfoCreateReq) Descriptor() ([]byte, []int) {
	return file_openned8_proto_rawDescGZIP(), []int{23}
}

func (x *SdkInfoCreateReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SdkInfoCreateReq) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *SdkInfoCreateReq) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *SdkInfoCreateReq) GetDownloadUrl() string {
	if x != nil {
		return x.DownloadUrl
	}
	return ""
}

type SdkInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	Avatar      string `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar"`
	Desc        string `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc"`
	DownloadUrl string `protobuf:"bytes,5,opt,name=download_url,json=downloadUrl,proto3" json:"download_url"`
}

func (x *SdkInfo) Reset() {
	*x = SdkInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openned8_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SdkInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SdkInfo) ProtoMessage() {}

func (x *SdkInfo) ProtoReflect() protoreflect.Message {
	mi := &file_openned8_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SdkInfo.ProtoReflect.Descriptor instead.
func (*SdkInfo) Descriptor() ([]byte, []int) {
	return file_openned8_proto_rawDescGZIP(), []int{24}
}

func (x *SdkInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SdkInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SdkInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *SdkInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *SdkInfo) GetDownloadUrl() string {
	if x != nil {
		return x.DownloadUrl
	}
	return ""
}

type AppSdkInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	AppId       string `protobuf:"bytes,2,opt,name=appId,proto3" json:"appId"`
	AppName     string `protobuf:"bytes,3,opt,name=appName,proto3" json:"appName"`
	SdkId       string `protobuf:"bytes,4,opt,name=sdkId,proto3" json:"sdkId"`
	SdkName     string `protobuf:"bytes,5,opt,name=sdkName,proto3" json:"sdkName"`
	SdkKey      string `protobuf:"bytes,6,opt,name=sdkKey,proto3" json:"sdkKey"`
	SdkAvatar   string `protobuf:"bytes,7,opt,name=sdkAvatar,proto3" json:"sdkAvatar"`
	SdkDesc     string `protobuf:"bytes,8,opt,name=sdkDesc,proto3" json:"sdkDesc"`
	DownloadUrl string `protobuf:"bytes,9,opt,name=download_url,json=downloadUrl,proto3" json:"download_url"`
}

func (x *AppSdkInfo) Reset() {
	*x = AppSdkInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openned8_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppSdkInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppSdkInfo) ProtoMessage() {}

func (x *AppSdkInfo) ProtoReflect() protoreflect.Message {
	mi := &file_openned8_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppSdkInfo.ProtoReflect.Descriptor instead.
func (*AppSdkInfo) Descriptor() ([]byte, []int) {
	return file_openned8_proto_rawDescGZIP(), []int{25}
}

func (x *AppSdkInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AppSdkInfo) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *AppSdkInfo) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *AppSdkInfo) GetSdkId() string {
	if x != nil {
		return x.SdkId
	}
	return ""
}

func (x *AppSdkInfo) GetSdkName() string {
	if x != nil {
		return x.SdkName
	}
	return ""
}

func (x *AppSdkInfo) GetSdkKey() string {
	if x != nil {
		return x.SdkKey
	}
	return ""
}

func (x *AppSdkInfo) GetSdkAvatar() string {
	if x != nil {
		return x.SdkAvatar
	}
	return ""
}

func (x *AppSdkInfo) GetSdkDesc() string {
	if x != nil {
		return x.SdkDesc
	}
	return ""
}

func (x *AppSdkInfo) GetDownloadUrl() string {
	if x != nil {
		return x.DownloadUrl
	}
	return ""
}

type SdkListQueryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     uint64 `protobuf:"varint,1,opt,name=Page,proto3" json:"Page"`
	PageSize uint64 `protobuf:"varint,2,opt,name=PageSize,proto3" json:"PageSize"`
}

func (x *SdkListQueryReq) Reset() {
	*x = SdkListQueryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openned8_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SdkListQueryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SdkListQueryReq) ProtoMessage() {}

func (x *SdkListQueryReq) ProtoReflect() protoreflect.Message {
	mi := &file_openned8_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SdkListQueryReq.ProtoReflect.Descriptor instead.
func (*SdkListQueryReq) Descriptor() ([]byte, []int) {
	return file_openned8_proto_rawDescGZIP(), []int{26}
}

func (x *SdkListQueryReq) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SdkListQueryReq) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type SdkListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int64      `protobuf:"varint,1,opt,name=count,proto3" json:"count"`
	Data  []*SdkInfo `protobuf:"bytes,2,rep,name=data,proto3" json:"data"`
}

func (x *SdkListResp) Reset() {
	*x = SdkListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openned8_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SdkListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SdkListResp) ProtoMessage() {}

func (x *SdkListResp) ProtoReflect() protoreflect.Message {
	mi := &file_openned8_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SdkListResp.ProtoReflect.Descriptor instead.
func (*SdkListResp) Descriptor() ([]byte, []int) {
	return file_openned8_proto_rawDescGZIP(), []int{27}
}

func (x *SdkListResp) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *SdkListResp) GetData() []*SdkInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type AppSdkListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int64         `protobuf:"varint,1,opt,name=count,proto3" json:"count"`
	Data  []*AppSdkInfo `protobuf:"bytes,2,rep,name=data,proto3" json:"data"`
}

func (x *AppSdkListResp) Reset() {
	*x = AppSdkListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openned8_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppSdkListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppSdkListResp) ProtoMessage() {}

func (x *AppSdkListResp) ProtoReflect() protoreflect.Message {
	mi := &file_openned8_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppSdkListResp.ProtoReflect.Descriptor instead.
func (*AppSdkListResp) Descriptor() ([]byte, []int) {
	return file_openned8_proto_rawDescGZIP(), []int{28}
}

func (x *AppSdkListResp) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *AppSdkListResp) GetData() []*AppSdkInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type SdkQueryByAppReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     uint64 `protobuf:"varint,1,opt,name=Page,proto3" json:"Page"`
	PageSize uint64 `protobuf:"varint,2,opt,name=PageSize,proto3" json:"PageSize"`
	AppId    string `protobuf:"bytes,3,opt,name=AppId,proto3" json:"AppId"`
	UserId   string `protobuf:"bytes,4,opt,name=UserId,proto3" json:"UserId"`
}

func (x *SdkQueryByAppReq) Reset() {
	*x = SdkQueryByAppReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openned8_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SdkQueryByAppReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SdkQueryByAppReq) ProtoMessage() {}

func (x *SdkQueryByAppReq) ProtoReflect() protoreflect.Message {
	mi := &file_openned8_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SdkQueryByAppReq.ProtoReflect.Descriptor instead.
func (*SdkQueryByAppReq) Descriptor() ([]byte, []int) {
	return file_openned8_proto_rawDescGZIP(), []int{29}
}

func (x *SdkQueryByAppReq) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SdkQueryByAppReq) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *SdkQueryByAppReq) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *SdkQueryByAppReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type DownloadCodeByAppIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId  string `protobuf:"bytes,1,opt,name=AppId,proto3" json:"AppId"`
	UserId string `protobuf:"bytes,2,opt,name=UserId,proto3" json:"UserId"`
}

func (x *DownloadCodeByAppIdReq) Reset() {
	*x = DownloadCodeByAppIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openned8_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadCodeByAppIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadCodeByAppIdReq) ProtoMessage() {}

func (x *DownloadCodeByAppIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_openned8_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadCodeByAppIdReq.ProtoReflect.Descriptor instead.
func (*DownloadCodeByAppIdReq) Descriptor() ([]byte, []int) {
	return file_openned8_proto_rawDescGZIP(), []int{30}
}

func (x *DownloadCodeByAppIdReq) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *DownloadCodeByAppIdReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type DownloadCodeByAppIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*DownloadCode `protobuf:"bytes,1,rep,name=data,proto3" json:"data"`
}

func (x *DownloadCodeByAppIdResp) Reset() {
	*x = DownloadCodeByAppIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openned8_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadCodeByAppIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadCodeByAppIdResp) ProtoMessage() {}

func (x *DownloadCodeByAppIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_openned8_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadCodeByAppIdResp.ProtoReflect.Descriptor instead.
func (*DownloadCodeByAppIdResp) Descriptor() ([]byte, []int) {
	return file_openned8_proto_rawDescGZIP(), []int{31}
}

func (x *DownloadCodeByAppIdResp) GetData() []*DownloadCode {
	if x != nil {
		return x.Data
	}
	return nil
}

type DownloadCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppKey string `protobuf:"bytes,1,opt,name=AppKey,proto3" json:"AppKey"`
	SdkKey string `protobuf:"bytes,2,opt,name=SdkKey,proto3" json:"SdkKey"`
	Code   string `protobuf:"bytes,3,opt,name=Code,proto3" json:"Code"`
}

func (x *DownloadCode) Reset() {
	*x = DownloadCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openned8_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadCode) ProtoMessage() {}

func (x *DownloadCode) ProtoReflect() protoreflect.Message {
	mi := &file_openned8_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadCode.ProtoReflect.Descriptor instead.
func (*DownloadCode) Descriptor() ([]byte, []int) {
	return file_openned8_proto_rawDescGZIP(), []int{32}
}

func (x *DownloadCode) GetAppKey() string {
	if x != nil {
		return x.AppKey
	}
	return ""
}

func (x *DownloadCode) GetSdkKey() string {
	if x != nil {
		return x.SdkKey
	}
	return ""
}

func (x *DownloadCode) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type QuerySdkKeyByAppIdAndActiveCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId      string `protobuf:"bytes,1,opt,name=appId,proto3" json:"appId"`
	ActiveCode string `protobuf:"bytes,2,opt,name=activeCode,proto3" json:"activeCode"`
}

func (x *QuerySdkKeyByAppIdAndActiveCodeReq) Reset() {
	*x = QuerySdkKeyByAppIdAndActiveCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openned8_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuerySdkKeyByAppIdAndActiveCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySdkKeyByAppIdAndActiveCodeReq) ProtoMessage() {}

func (x *QuerySdkKeyByAppIdAndActiveCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_openned8_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySdkKeyByAppIdAndActiveCodeReq.ProtoReflect.Descriptor instead.
func (*QuerySdkKeyByAppIdAndActiveCodeReq) Descriptor() ([]byte, []int) {
	return file_openned8_proto_rawDescGZIP(), []int{33}
}

func (x *QuerySdkKeyByAppIdAndActiveCodeReq) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *QuerySdkKeyByAppIdAndActiveCodeReq) GetActiveCode() string {
	if x != nil {
		return x.ActiveCode
	}
	return ""
}

type BaseString struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data"`
}

func (x *BaseString) Reset() {
	*x = BaseString{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openned8_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseString) ProtoMessage() {}

func (x *BaseString) ProtoReflect() protoreflect.Message {
	mi := &file_openned8_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseString.ProtoReflect.Descriptor instead.
func (*BaseString) Descriptor() ([]byte, []int) {
	return file_openned8_proto_rawDescGZIP(), []int{34}
}

func (x *BaseString) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type ActiveDeviceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId      string `protobuf:"bytes,1,opt,name=appId,proto3" json:"appId"`
	SdkKey     string `protobuf:"bytes,2,opt,name=sdkKey,proto3" json:"sdkKey"`
	ActiveCode string `protobuf:"bytes,3,opt,name=activeCode,proto3" json:"activeCode"`
	Imei       string `protobuf:"bytes,4,opt,name=imei,proto3" json:"imei"`
	DeviceSn   string `protobuf:"bytes,5,opt,name=deviceSn,proto3" json:"deviceSn"`
}

func (x *ActiveDeviceReq) Reset() {
	*x = ActiveDeviceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openned8_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActiveDeviceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActiveDeviceReq) ProtoMessage() {}

func (x *ActiveDeviceReq) ProtoReflect() protoreflect.Message {
	mi := &file_openned8_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActiveDeviceReq.ProtoReflect.Descriptor instead.
func (*ActiveDeviceReq) Descriptor() ([]byte, []int) {
	return file_openned8_proto_rawDescGZIP(), []int{35}
}

func (x *ActiveDeviceReq) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *ActiveDeviceReq) GetSdkKey() string {
	if x != nil {
		return x.SdkKey
	}
	return ""
}

func (x *ActiveDeviceReq) GetActiveCode() string {
	if x != nil {
		return x.ActiveCode
	}
	return ""
}

func (x *ActiveDeviceReq) GetImei() string {
	if x != nil {
		return x.Imei
	}
	return ""
}

func (x *ActiveDeviceReq) GetDeviceSn() string {
	if x != nil {
		return x.DeviceSn
	}
	return ""
}

type ActiveDeviceResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ActiveDeviceResp) Reset() {
	*x = ActiveDeviceResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openned8_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActiveDeviceResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActiveDeviceResp) ProtoMessage() {}

func (x *ActiveDeviceResp) ProtoReflect() protoreflect.Message {
	mi := &file_openned8_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActiveDeviceResp.ProtoReflect.Descriptor instead.
func (*ActiveDeviceResp) Descriptor() ([]byte, []int) {
	return file_openned8_proto_rawDescGZIP(), []int{36}
}

var File_openned8_proto protoreflect.FileDescriptor

var file_openned8_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x6e, 0x6e, 0x65, 0x64, 0x38, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x6e, 0x65, 0x64, 0x38, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x1b, 0x0a, 0x07, 0x42, 0x61, 0x73, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x22, 0x1a, 0x0a, 0x08, 0x49, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3a, 0x0a, 0x08,
	0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x48, 0x0a, 0x08, 0x53, 0x64, 0x6b, 0x55,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x41, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x41, 0x6c, 0x6c, 0x12, 0x12,
	0x0a, 0x04, 0x55, 0x73, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x55, 0x73,
	0x65, 0x64, 0x22, 0xef, 0x02, 0x0a, 0x07, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x70, 0x70, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x41, 0x70, 0x70,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x49,
	0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x55,
	0x73, 0x65, 0x49, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x12, 0x28, 0x0a, 0x0f, 0x41, 0x70,
	0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x41, 0x70, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x49, 0x6e, 0x64, 0x75, 0x73,
	0x74, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x55,
	0x73, 0x65, 0x49, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x41, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x41, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x70, 0x70, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x70, 0x70, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x22, 0xa2, 0x01, 0x0a, 0x10, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x41, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x70, 0x70, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x41, 0x70, 0x70, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x49, 0x6e,
	0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x55, 0x73,
	0x65, 0x49, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x22, 0xb2, 0x01, 0x0a, 0x10, 0x41, 0x70,
	0x70, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x70, 0x70, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x70,
	0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x41, 0x70, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b,
	0x55, 0x73, 0x65, 0x49, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x55, 0x73, 0x65, 0x49, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x22, 0x3a,
	0x0a, 0x10, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xc2, 0x01, 0x0a, 0x0a, 0x41,
	0x70, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x2e, 0x0a, 0x08, 0x50, 0x61, 0x67,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x6e, 0x65, 0x64, 0x38, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x08, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x70, 0x70,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x70, 0x70, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x41, 0x70, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x41, 0x70,
	0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a,
	0x0f, 0x55, 0x73, 0x65, 0x49, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x55, 0x73, 0x65, 0x49, 0x6e, 0x64, 0x75, 0x73,
	0x74, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x4a, 0x0a, 0x0b, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14,
	0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x25, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x6e, 0x65, 0x64, 0x38, 0x2e, 0x41, 0x70,
	0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x3e, 0x0a, 0x10, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x2a, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x6e, 0x65, 0x64, 0x38, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x32, 0x0a, 0x0c, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x3e, 0x0a, 0x10, 0x49, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x6e, 0x65, 0x64, 0x38, 0x2e, 0x49, 0x6e, 0x64,
	0x75, 0x73, 0x74, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22,
	0x32, 0x0a, 0x0c, 0x49, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x3b, 0x0a, 0x0d, 0x41, 0x70, 0x70, 0x42, 0x69, 0x6e, 0x64, 0x53, 0x64,
	0x6b, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x64,
	0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x64, 0x6b, 0x49, 0x64,
	0x22, 0xc5, 0x01, 0x0a, 0x11, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x2e, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x6e,
	0x65, 0x64, 0x38, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x50, 0x61,
	0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41,
	0x70, 0x70, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x70, 0x70, 0x53, 0x64, 0x6b, 0x49, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x41, 0x70, 0x70, 0x53, 0x64, 0x6b, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x45, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x45, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x44, 0x61, 0x74, 0x65, 0x22, 0x58, 0x0a, 0x12, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14,
	0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2c, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x6e, 0x65, 0x64, 0x38, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x44, 0x61,
	0x74, 0x61, 0x22, 0x64, 0x0a, 0x0e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x6e,
	0x65, 0x64, 0x38, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x92, 0x04, 0x0a, 0x0e, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x4b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x41, 0x70, 0x70, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70,
	0x70, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x49, 0x50, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x49, 0x50, 0x12,
	0x1a, 0x0a, 0x08, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x4e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x4e, 0x12, 0x1c, 0x0a, 0x09, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x63, 0x12, 0x26, 0x0a, 0x0e, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x46, 0x69, 0x6c,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x45, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x45,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x70, 0x70, 0x53, 0x64, 0x6b, 0x49, 0x64, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x41, 0x70, 0x70, 0x53, 0x64, 0x6b, 0x49, 0x64, 0x22, 0x74, 0x0a,
	0x12, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x51,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x51,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x53, 0x64, 0x6b, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x53, 0x64,
	0x6b, 0x49, 0x64, 0x22, 0x2e, 0x0a, 0x14, 0x55, 0x73, 0x65, 0x72, 0x53, 0x64, 0x6b, 0x55, 0x73,
	0x61, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x41, 0x0a, 0x15, 0x55, 0x73, 0x65, 0x72, 0x53, 0x64, 0x6b, 0x55, 0x73,
	0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x41, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x41, 0x6c, 0x6c, 0x22, 0x75, 0x0a, 0x10, 0x53, 0x64, 0x6b, 0x49, 0x6e, 0x66,
	0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x22, 0x7c, 0x0a,
	0x07, 0x53, 0x64, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x22, 0xef, 0x01, 0x0a, 0x0a,
	0x41, 0x70, 0x70, 0x53, 0x64, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70,
	0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x64,
	0x6b, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x64, 0x6b, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x64, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x64, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x64,
	0x6b, 0x4b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x64, 0x6b, 0x4b,
	0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x64, 0x6b, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x64, 0x6b, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x64, 0x6b, 0x44, 0x65, 0x73, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x64, 0x6b, 0x44, 0x65, 0x73, 0x63, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x22, 0x41, 0x0a,
	0x0f, 0x53, 0x64, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04,
	0x50, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x22, 0x4a, 0x0a, 0x0b, 0x53, 0x64, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x6e, 0x65, 0x64, 0x38, 0x2e, 0x53,
	0x64, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x50, 0x0a, 0x0e,
	0x41, 0x70, 0x70, 0x53, 0x64, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x6e, 0x65, 0x64, 0x38, 0x2e, 0x41, 0x70,
	0x70, 0x53, 0x64, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x70,
	0x0a, 0x10, 0x53, 0x64, 0x6b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x79, 0x41, 0x70, 0x70, 0x52,
	0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x46, 0x0a, 0x16, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x64, 0x65,
	0x42, 0x79, 0x41, 0x70, 0x70, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70,
	0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x45, 0x0a, 0x17, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x79, 0x41, 0x70, 0x70, 0x49, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x6e, 0x65, 0x64, 0x38, 0x2e, 0x44, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x52, 0x0a, 0x0c, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x41, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x41, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x64, 0x6b, 0x4b, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x64, 0x6b, 0x4b, 0x65, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43,
	0x6f, 0x64, 0x65, 0x22, 0x5a, 0x0a, 0x22, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x64, 0x6b, 0x4b,
	0x65, 0x79, 0x42, 0x79, 0x41, 0x70, 0x70, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x22,
	0x20, 0x0a, 0x0a, 0x42, 0x61, 0x73, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x8f, 0x01, 0x0a, 0x0f, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x64, 0x6b, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x64, 0x6b,
	0x4b, 0x65, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6d, 0x65, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x69, 0x6d, 0x65, 0x69, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x53, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x53, 0x6e, 0x22, 0x12, 0x0a, 0x10, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x32, 0xbf, 0x0a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x6e,
	0x6e, 0x65, 0x64, 0x38, 0x12, 0x32, 0x0a, 0x0c, 0x69, 0x6e, 0x69, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x12, 0x0f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x6e, 0x65, 0x64, 0x38, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x11, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x6e, 0x65, 0x64, 0x38,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x3a, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x6e, 0x65, 0x64, 0x38,
	0x2e, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x11, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x6e, 0x65, 0x64, 0x38, 0x2e, 0x41, 0x70, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3a, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x1a, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x6e, 0x65, 0x64, 0x38, 0x2e, 0x41, 0x70, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x6e, 0x65, 0x64, 0x38, 0x2e, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x3a, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1a, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x6e, 0x65, 0x64, 0x38, 0x2e, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x6e, 0x65, 0x64, 0x38, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x37, 0x0a, 0x08,
	0x61, 0x70, 0x70, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x14, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x6e,
	0x65, 0x64, 0x38, 0x2e, 0x41, 0x70, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x15,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x6e, 0x65, 0x64, 0x38, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x73,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3c, 0x0a, 0x0d, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x0f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x6e, 0x65, 0x64,
	0x38, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1a, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x6e, 0x65,
	0x64, 0x38, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0d, 0x69, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x12, 0x0f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x6e, 0x65, 0x64, 0x38, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1a, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x6e, 0x65, 0x64, 0x38,
	0x2e, 0x49, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x4c, 0x0a, 0x0f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x12, 0x1b, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x6e, 0x65, 0x64, 0x38, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x1c, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x6e, 0x65, 0x64, 0x38, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x49, 0x0a, 0x0f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x12, 0x1c, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x6e, 0x65, 0x64, 0x38, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x18, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x6e, 0x65, 0x64, 0x38, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5a, 0x0a, 0x13, 0x64, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x79, 0x41, 0x70, 0x70, 0x49,
	0x64, 0x12, 0x20, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x6e, 0x65, 0x64, 0x38, 0x2e, 0x44, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x79, 0x41, 0x70, 0x70, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x6e, 0x65, 0x64, 0x38, 0x2e, 0x44,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x79, 0x41, 0x70, 0x70,
	0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x40, 0x0a, 0x0c, 0x73, 0x64, 0x6b, 0x4c, 0x69, 0x73,
	0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x19, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x6e, 0x65, 0x64,
	0x38, 0x2e, 0x53, 0x64, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x1a, 0x15, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x6e, 0x65, 0x64, 0x38, 0x2e, 0x53, 0x64, 0x6b,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x0d, 0x73, 0x64, 0x6b, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x42, 0x79, 0x41, 0x70, 0x70, 0x12, 0x1a, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x6e, 0x65, 0x64, 0x38, 0x2e, 0x53, 0x64, 0x6b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x79, 0x41,
	0x70, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x6e, 0x65, 0x64, 0x38,
	0x2e, 0x41, 0x70, 0x70, 0x53, 0x64, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x3b, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x42, 0x69, 0x6e, 0x64, 0x53, 0x64, 0x6b, 0x12, 0x17, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x6e, 0x65, 0x64, 0x38, 0x2e, 0x41, 0x70, 0x70, 0x42, 0x69, 0x6e, 0x64,
	0x53, 0x64, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x6e, 0x65, 0x64,
	0x38, 0x2e, 0x41, 0x70, 0x70, 0x53, 0x64, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x47, 0x0a, 0x11,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x53, 0x64, 0x6b, 0x55, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x1e, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x6e, 0x65, 0x64, 0x38, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x64, 0x6b, 0x55, 0x73, 0x61, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x1a, 0x12, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x6e, 0x65, 0x64, 0x38, 0x2e, 0x53, 0x64, 0x6b,
	0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x49, 0x0a, 0x12, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x64, 0x6b, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x6e, 0x65, 0x64, 0x38, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x64, 0x6b, 0x55, 0x73,
	0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x6e, 0x65, 0x64, 0x38, 0x2e, 0x53, 0x64, 0x6b, 0x55, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x3a, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x64, 0x6b, 0x12, 0x1a, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x6e, 0x65, 0x64, 0x38, 0x2e, 0x53, 0x64, 0x6b, 0x49, 0x6e, 0x66, 0x6f,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x6e, 0x65, 0x64, 0x38, 0x2e, 0x53, 0x64, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x65, 0x0a, 0x1f,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x53, 0x64, 0x6b, 0x4b, 0x65, 0x79, 0x42, 0x79, 0x41, 0x70, 0x70,
	0x49, 0x64, 0x41, 0x6e, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x2c, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x6e, 0x65, 0x64, 0x38, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x53, 0x64, 0x6b, 0x4b, 0x65, 0x79, 0x42, 0x79, 0x41, 0x70, 0x70, 0x49, 0x64, 0x41, 0x6e, 0x64,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x6e, 0x65, 0x64, 0x38, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x12, 0x5d, 0x0a, 0x17, 0x71, 0x75, 0x65, 0x72, 0x79, 0x41, 0x70, 0x70, 0x53,
	0x64, 0x6b, 0x42, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2c,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x6e, 0x65, 0x64, 0x38, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53,
	0x64, 0x6b, 0x4b, 0x65, 0x79, 0x42, 0x79, 0x41, 0x70, 0x70, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x6e, 0x65, 0x64, 0x38, 0x2e, 0x41, 0x70, 0x70, 0x53, 0x64, 0x6b, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x45, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x19, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x6e, 0x65, 0x64, 0x38, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x6e, 0x65, 0x64, 0x38, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x6f,
	0x70, 0x65, 0x6e, 0x6e, 0x65, 0x64, 0x38, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_openned8_proto_rawDescOnce sync.Once
	file_openned8_proto_rawDescData = file_openned8_proto_rawDesc
)

func file_openned8_proto_rawDescGZIP() []byte {
	file_openned8_proto_rawDescOnce.Do(func() {
		file_openned8_proto_rawDescData = protoimpl.X.CompressGZIP(file_openned8_proto_rawDescData)
	})
	return file_openned8_proto_rawDescData
}

var file_openned8_proto_msgTypes = make([]protoimpl.MessageInfo, 37)
var file_openned8_proto_goTypes = []interface{}{
	(*Empty)(nil),                              // 0: openned8.Empty
	(*BaseMsg)(nil),                            // 1: openned8.BaseMsg
	(*IdString)(nil),                           // 2: openned8.IdString
	(*PageInfo)(nil),                           // 3: openned8.PageInfo
	(*SdkUsage)(nil),                           // 4: openned8.SdkUsage
	(*AppInfo)(nil),                            // 5: openned8.AppInfo
	(*AppInfoCreateReq)(nil),                   // 6: openned8.AppInfoCreateReq
	(*AppInfoUpdateReq)(nil),                   // 7: openned8.AppInfoUpdateReq
	(*AppInfoDeleteReq)(nil),                   // 8: openned8.AppInfoDeleteReq
	(*AppListReq)(nil),                         // 9: openned8.AppListReq
	(*ApplistInfo)(nil),                        // 10: openned8.ApplistInfo
	(*CategorylistResp)(nil),                   // 11: openned8.CategorylistResp
	(*CategoryInfo)(nil),                       // 12: openned8.CategoryInfo
	(*IndustrylistResp)(nil),                   // 13: openned8.IndustrylistResp
	(*IndustryInfo)(nil),                       // 14: openned8.IndustryInfo
	(*AppBindSdkReq)(nil),                      // 15: openned8.AppBindSdkReq
	(*ActiveCodeListReq)(nil),                  // 16: openned8.ActiveCodeListReq
	(*ActiveCodeListInfo)(nil),                 // 17: openned8.ActiveCodeListInfo
	(*ActiveCodeResp)(nil),                     // 18: openned8.ActiveCodeResp
	(*ActiveCodeInfo)(nil),                     // 19: openned8.ActiveCodeInfo
	(*ActiveCodeCreatReq)(nil),                 // 20: openned8.ActiveCodeCreatReq
	(*UserSdkUsageQueryReq)(nil),               // 21: openned8.UserSdkUsageQueryReq
	(*UserSdkUsageUpdateReq)(nil),              // 22: openned8.UserSdkUsageUpdateReq
	(*SdkInfoCreateReq)(nil),                   // 23: openned8.SdkInfoCreateReq
	(*SdkInfo)(nil),                            // 24: openned8.SdkInfo
	(*AppSdkInfo)(nil),                         // 25: openned8.AppSdkInfo
	(*SdkListQueryReq)(nil),                    // 26: openned8.SdkListQueryReq
	(*SdkListResp)(nil),                        // 27: openned8.SdkListResp
	(*AppSdkListResp)(nil),                     // 28: openned8.AppSdkListResp
	(*SdkQueryByAppReq)(nil),                   // 29: openned8.SdkQueryByAppReq
	(*DownloadCodeByAppIdReq)(nil),             // 30: openned8.DownloadCodeByAppIdReq
	(*DownloadCodeByAppIdResp)(nil),            // 31: openned8.DownloadCodeByAppIdResp
	(*DownloadCode)(nil),                       // 32: openned8.DownloadCode
	(*QuerySdkKeyByAppIdAndActiveCodeReq)(nil), // 33: openned8.QuerySdkKeyByAppIdAndActiveCodeReq
	(*BaseString)(nil),                         // 34: openned8.BaseString
	(*ActiveDeviceReq)(nil),                    // 35: openned8.ActiveDeviceReq
	(*ActiveDeviceResp)(nil),                   // 36: openned8.ActiveDeviceResp
}
var file_openned8_proto_depIdxs = []int32{
	3,  // 0: openned8.AppListReq.PageInfo:type_name -> openned8.PageInfo
	5,  // 1: openned8.ApplistInfo.Data:type_name -> openned8.AppInfo
	12, // 2: openned8.CategorylistResp.Data:type_name -> openned8.CategoryInfo
	14, // 3: openned8.IndustrylistResp.Data:type_name -> openned8.IndustryInfo
	3,  // 4: openned8.ActiveCodeListReq.PageInfo:type_name -> openned8.PageInfo
	19, // 5: openned8.ActiveCodeListInfo.Data:type_name -> openned8.ActiveCodeInfo
	19, // 6: openned8.ActiveCodeResp.data:type_name -> openned8.ActiveCodeInfo
	24, // 7: openned8.SdkListResp.data:type_name -> openned8.SdkInfo
	25, // 8: openned8.AppSdkListResp.data:type_name -> openned8.AppSdkInfo
	32, // 9: openned8.DownloadCodeByAppIdResp.data:type_name -> openned8.DownloadCode
	0,  // 10: openned8.openned8.initDatabase:input_type -> openned8.Empty
	6,  // 11: openned8.openned8.appCreate:input_type -> openned8.AppInfoCreateReq
	7,  // 12: openned8.openned8.appUpdate:input_type -> openned8.AppInfoUpdateReq
	8,  // 13: openned8.openned8.appDelete:input_type -> openned8.AppInfoDeleteReq
	9,  // 14: openned8.openned8.appQuery:input_type -> openned8.AppListReq
	0,  // 15: openned8.openned8.categoryQuery:input_type -> openned8.Empty
	0,  // 16: openned8.openned8.industryQuery:input_type -> openned8.Empty
	16, // 17: openned8.openned8.activeCodeQuery:input_type -> openned8.ActiveCodeListReq
	20, // 18: openned8.openned8.activeCodeCreat:input_type -> openned8.ActiveCodeCreatReq
	30, // 19: openned8.openned8.downloadCodeByAppId:input_type -> openned8.DownloadCodeByAppIdReq
	26, // 20: openned8.openned8.sdkListQuery:input_type -> openned8.SdkListQueryReq
	29, // 21: openned8.openned8.sdkQueryByApp:input_type -> openned8.SdkQueryByAppReq
	15, // 22: openned8.openned8.appBindSdk:input_type -> openned8.AppBindSdkReq
	21, // 23: openned8.openned8.queryUserSdkUsage:input_type -> openned8.UserSdkUsageQueryReq
	22, // 24: openned8.openned8.updateUserSdkUsage:input_type -> openned8.UserSdkUsageUpdateReq
	23, // 25: openned8.openned8.createSdk:input_type -> openned8.SdkInfoCreateReq
	33, // 26: openned8.openned8.querySdkKeyByAppIdAndActiveCode:input_type -> openned8.QuerySdkKeyByAppIdAndActiveCodeReq
	33, // 27: openned8.openned8.queryAppSdkByActiveCode:input_type -> openned8.QuerySdkKeyByAppIdAndActiveCodeReq
	35, // 28: openned8.openned8.activeDevice:input_type -> openned8.ActiveDeviceReq
	1,  // 29: openned8.openned8.initDatabase:output_type -> openned8.BaseMsg
	5,  // 30: openned8.openned8.appCreate:output_type -> openned8.AppInfo
	5,  // 31: openned8.openned8.appUpdate:output_type -> openned8.AppInfo
	1,  // 32: openned8.openned8.appDelete:output_type -> openned8.BaseMsg
	10, // 33: openned8.openned8.appQuery:output_type -> openned8.ApplistInfo
	11, // 34: openned8.openned8.categoryQuery:output_type -> openned8.CategorylistResp
	13, // 35: openned8.openned8.industryQuery:output_type -> openned8.IndustrylistResp
	17, // 36: openned8.openned8.activeCodeQuery:output_type -> openned8.ActiveCodeListInfo
	18, // 37: openned8.openned8.activeCodeCreat:output_type -> openned8.ActiveCodeResp
	31, // 38: openned8.openned8.downloadCodeByAppId:output_type -> openned8.DownloadCodeByAppIdResp
	27, // 39: openned8.openned8.sdkListQuery:output_type -> openned8.SdkListResp
	28, // 40: openned8.openned8.sdkQueryByApp:output_type -> openned8.AppSdkListResp
	25, // 41: openned8.openned8.appBindSdk:output_type -> openned8.AppSdkInfo
	4,  // 42: openned8.openned8.queryUserSdkUsage:output_type -> openned8.SdkUsage
	4,  // 43: openned8.openned8.updateUserSdkUsage:output_type -> openned8.SdkUsage
	24, // 44: openned8.openned8.createSdk:output_type -> openned8.SdkInfo
	34, // 45: openned8.openned8.querySdkKeyByAppIdAndActiveCode:output_type -> openned8.BaseString
	25, // 46: openned8.openned8.queryAppSdkByActiveCode:output_type -> openned8.AppSdkInfo
	36, // 47: openned8.openned8.activeDevice:output_type -> openned8.ActiveDeviceResp
	29, // [29:48] is the sub-list for method output_type
	10, // [10:29] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_openned8_proto_init() }
func file_openned8_proto_init() {
	if File_openned8_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_openned8_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openned8_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openned8_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdString); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openned8_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openned8_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SdkUsage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openned8_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openned8_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppInfoCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openned8_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppInfoUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openned8_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppInfoDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openned8_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openned8_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplistInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openned8_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategorylistResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openned8_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoryInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openned8_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndustrylistResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openned8_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndustryInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openned8_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppBindSdkReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openned8_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActiveCodeListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openned8_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActiveCodeListInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openned8_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActiveCodeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openned8_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActiveCodeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openned8_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActiveCodeCreatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openned8_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSdkUsageQueryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openned8_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSdkUsageUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openned8_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SdkInfoCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openned8_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SdkInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openned8_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppSdkInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openned8_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SdkListQueryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openned8_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SdkListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openned8_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppSdkListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openned8_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SdkQueryByAppReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openned8_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadCodeByAppIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openned8_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadCodeByAppIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openned8_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openned8_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuerySdkKeyByAppIdAndActiveCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openned8_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseString); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openned8_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActiveDeviceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openned8_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActiveDeviceResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_openned8_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   37,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_openned8_proto_goTypes,
		DependencyIndexes: file_openned8_proto_depIdxs,
		MessageInfos:      file_openned8_proto_msgTypes,
	}.Build()
	File_openned8_proto = out.File
	file_openned8_proto_rawDesc = nil
	file_openned8_proto_goTypes = nil
	file_openned8_proto_depIdxs = nil
}
