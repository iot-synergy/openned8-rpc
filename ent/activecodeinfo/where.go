// Code generated by ent, DO NOT EDIT.

package activecodeinfo

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	uuid "github.com/gofrs/uuid/v5"
	"github.com/iot-synergy/openned8-rpc/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id uuid.UUID) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uuid.UUID) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uuid.UUID) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uuid.UUID) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uuid.UUID) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uuid.UUID) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uuid.UUID) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uuid.UUID) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uuid.UUID) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldLTE(FieldID, id))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldEQ(FieldUpdatedAt, v))
}

// Status applies equality check predicate on the "status" field. It's identical to StatusEQ.
func Status(v uint8) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldEQ(FieldStatus, v))
}

// ActiveKey applies equality check predicate on the "active_key" field. It's identical to ActiveKeyEQ.
func ActiveKey(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldEQ(FieldActiveKey, v))
}

// UserID applies equality check predicate on the "user_id" field. It's identical to UserIDEQ.
func UserID(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldEQ(FieldUserID, v))
}

// AppID applies equality check predicate on the "app_id" field. It's identical to AppIDEQ.
func AppID(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldEQ(FieldAppID, v))
}

// AppKey applies equality check predicate on the "app_key" field. It's identical to AppKeyEQ.
func AppKey(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldEQ(FieldAppKey, v))
}

// ActiveIP applies equality check predicate on the "active_ip" field. It's identical to ActiveIPEQ.
func ActiveIP(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldEQ(FieldActiveIP, v))
}

// DeviceSn applies equality check predicate on the "device_sn" field. It's identical to DeviceSnEQ.
func DeviceSn(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldEQ(FieldDeviceSn, v))
}

// DeviceMAC applies equality check predicate on the "device_mac" field. It's identical to DeviceMACEQ.
func DeviceMAC(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldEQ(FieldDeviceMAC, v))
}

// DeviceIdentity applies equality check predicate on the "device_identity" field. It's identical to DeviceIdentityEQ.
func DeviceIdentity(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldEQ(FieldDeviceIdentity, v))
}

// ActiveDate applies equality check predicate on the "active_date" field. It's identical to ActiveDateEQ.
func ActiveDate(v time.Time) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldEQ(FieldActiveDate, v))
}

// ActiveType applies equality check predicate on the "active_type" field. It's identical to ActiveTypeEQ.
func ActiveType(v int64) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldEQ(FieldActiveType, v))
}

// ActiveFile applies equality check predicate on the "active_file" field. It's identical to ActiveFileEQ.
func ActiveFile(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldEQ(FieldActiveFile, v))
}

// Version applies equality check predicate on the "version" field. It's identical to VersionEQ.
func Version(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldEQ(FieldVersion, v))
}

// StartDate applies equality check predicate on the "start_date" field. It's identical to StartDateEQ.
func StartDate(v time.Time) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldEQ(FieldStartDate, v))
}

// ExpireDate applies equality check predicate on the "expire_date" field. It's identical to ExpireDateEQ.
func ExpireDate(v time.Time) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldEQ(FieldExpireDate, v))
}

// AppSdkID applies equality check predicate on the "app_sdk_id" field. It's identical to AppSdkIDEQ.
func AppSdkID(v uuid.UUID) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldEQ(FieldAppSdkID, v))
}

// Imei applies equality check predicate on the "imei" field. It's identical to ImeiEQ.
func Imei(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldEQ(FieldImei, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldLTE(FieldUpdatedAt, v))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v uint8) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldEQ(FieldStatus, v))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v uint8) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldNEQ(FieldStatus, v))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...uint8) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldIn(FieldStatus, vs...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...uint8) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldNotIn(FieldStatus, vs...))
}

// StatusGT applies the GT predicate on the "status" field.
func StatusGT(v uint8) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldGT(FieldStatus, v))
}

// StatusGTE applies the GTE predicate on the "status" field.
func StatusGTE(v uint8) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldGTE(FieldStatus, v))
}

// StatusLT applies the LT predicate on the "status" field.
func StatusLT(v uint8) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldLT(FieldStatus, v))
}

// StatusLTE applies the LTE predicate on the "status" field.
func StatusLTE(v uint8) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldLTE(FieldStatus, v))
}

// StatusIsNil applies the IsNil predicate on the "status" field.
func StatusIsNil() predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldIsNull(FieldStatus))
}

// StatusNotNil applies the NotNil predicate on the "status" field.
func StatusNotNil() predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldNotNull(FieldStatus))
}

// ActiveKeyEQ applies the EQ predicate on the "active_key" field.
func ActiveKeyEQ(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldEQ(FieldActiveKey, v))
}

// ActiveKeyNEQ applies the NEQ predicate on the "active_key" field.
func ActiveKeyNEQ(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldNEQ(FieldActiveKey, v))
}

// ActiveKeyIn applies the In predicate on the "active_key" field.
func ActiveKeyIn(vs ...string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldIn(FieldActiveKey, vs...))
}

// ActiveKeyNotIn applies the NotIn predicate on the "active_key" field.
func ActiveKeyNotIn(vs ...string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldNotIn(FieldActiveKey, vs...))
}

// ActiveKeyGT applies the GT predicate on the "active_key" field.
func ActiveKeyGT(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldGT(FieldActiveKey, v))
}

// ActiveKeyGTE applies the GTE predicate on the "active_key" field.
func ActiveKeyGTE(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldGTE(FieldActiveKey, v))
}

// ActiveKeyLT applies the LT predicate on the "active_key" field.
func ActiveKeyLT(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldLT(FieldActiveKey, v))
}

// ActiveKeyLTE applies the LTE predicate on the "active_key" field.
func ActiveKeyLTE(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldLTE(FieldActiveKey, v))
}

// ActiveKeyContains applies the Contains predicate on the "active_key" field.
func ActiveKeyContains(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldContains(FieldActiveKey, v))
}

// ActiveKeyHasPrefix applies the HasPrefix predicate on the "active_key" field.
func ActiveKeyHasPrefix(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldHasPrefix(FieldActiveKey, v))
}

// ActiveKeyHasSuffix applies the HasSuffix predicate on the "active_key" field.
func ActiveKeyHasSuffix(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldHasSuffix(FieldActiveKey, v))
}

// ActiveKeyEqualFold applies the EqualFold predicate on the "active_key" field.
func ActiveKeyEqualFold(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldEqualFold(FieldActiveKey, v))
}

// ActiveKeyContainsFold applies the ContainsFold predicate on the "active_key" field.
func ActiveKeyContainsFold(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldContainsFold(FieldActiveKey, v))
}

// UserIDEQ applies the EQ predicate on the "user_id" field.
func UserIDEQ(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldEQ(FieldUserID, v))
}

// UserIDNEQ applies the NEQ predicate on the "user_id" field.
func UserIDNEQ(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldNEQ(FieldUserID, v))
}

// UserIDIn applies the In predicate on the "user_id" field.
func UserIDIn(vs ...string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldIn(FieldUserID, vs...))
}

// UserIDNotIn applies the NotIn predicate on the "user_id" field.
func UserIDNotIn(vs ...string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldNotIn(FieldUserID, vs...))
}

// UserIDGT applies the GT predicate on the "user_id" field.
func UserIDGT(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldGT(FieldUserID, v))
}

// UserIDGTE applies the GTE predicate on the "user_id" field.
func UserIDGTE(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldGTE(FieldUserID, v))
}

// UserIDLT applies the LT predicate on the "user_id" field.
func UserIDLT(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldLT(FieldUserID, v))
}

// UserIDLTE applies the LTE predicate on the "user_id" field.
func UserIDLTE(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldLTE(FieldUserID, v))
}

// UserIDContains applies the Contains predicate on the "user_id" field.
func UserIDContains(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldContains(FieldUserID, v))
}

// UserIDHasPrefix applies the HasPrefix predicate on the "user_id" field.
func UserIDHasPrefix(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldHasPrefix(FieldUserID, v))
}

// UserIDHasSuffix applies the HasSuffix predicate on the "user_id" field.
func UserIDHasSuffix(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldHasSuffix(FieldUserID, v))
}

// UserIDEqualFold applies the EqualFold predicate on the "user_id" field.
func UserIDEqualFold(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldEqualFold(FieldUserID, v))
}

// UserIDContainsFold applies the ContainsFold predicate on the "user_id" field.
func UserIDContainsFold(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldContainsFold(FieldUserID, v))
}

// AppIDEQ applies the EQ predicate on the "app_id" field.
func AppIDEQ(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldEQ(FieldAppID, v))
}

// AppIDNEQ applies the NEQ predicate on the "app_id" field.
func AppIDNEQ(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldNEQ(FieldAppID, v))
}

// AppIDIn applies the In predicate on the "app_id" field.
func AppIDIn(vs ...string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldIn(FieldAppID, vs...))
}

// AppIDNotIn applies the NotIn predicate on the "app_id" field.
func AppIDNotIn(vs ...string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldNotIn(FieldAppID, vs...))
}

// AppIDGT applies the GT predicate on the "app_id" field.
func AppIDGT(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldGT(FieldAppID, v))
}

// AppIDGTE applies the GTE predicate on the "app_id" field.
func AppIDGTE(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldGTE(FieldAppID, v))
}

// AppIDLT applies the LT predicate on the "app_id" field.
func AppIDLT(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldLT(FieldAppID, v))
}

// AppIDLTE applies the LTE predicate on the "app_id" field.
func AppIDLTE(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldLTE(FieldAppID, v))
}

// AppIDContains applies the Contains predicate on the "app_id" field.
func AppIDContains(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldContains(FieldAppID, v))
}

// AppIDHasPrefix applies the HasPrefix predicate on the "app_id" field.
func AppIDHasPrefix(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldHasPrefix(FieldAppID, v))
}

// AppIDHasSuffix applies the HasSuffix predicate on the "app_id" field.
func AppIDHasSuffix(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldHasSuffix(FieldAppID, v))
}

// AppIDEqualFold applies the EqualFold predicate on the "app_id" field.
func AppIDEqualFold(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldEqualFold(FieldAppID, v))
}

// AppIDContainsFold applies the ContainsFold predicate on the "app_id" field.
func AppIDContainsFold(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldContainsFold(FieldAppID, v))
}

// AppKeyEQ applies the EQ predicate on the "app_key" field.
func AppKeyEQ(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldEQ(FieldAppKey, v))
}

// AppKeyNEQ applies the NEQ predicate on the "app_key" field.
func AppKeyNEQ(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldNEQ(FieldAppKey, v))
}

// AppKeyIn applies the In predicate on the "app_key" field.
func AppKeyIn(vs ...string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldIn(FieldAppKey, vs...))
}

// AppKeyNotIn applies the NotIn predicate on the "app_key" field.
func AppKeyNotIn(vs ...string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldNotIn(FieldAppKey, vs...))
}

// AppKeyGT applies the GT predicate on the "app_key" field.
func AppKeyGT(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldGT(FieldAppKey, v))
}

// AppKeyGTE applies the GTE predicate on the "app_key" field.
func AppKeyGTE(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldGTE(FieldAppKey, v))
}

// AppKeyLT applies the LT predicate on the "app_key" field.
func AppKeyLT(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldLT(FieldAppKey, v))
}

// AppKeyLTE applies the LTE predicate on the "app_key" field.
func AppKeyLTE(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldLTE(FieldAppKey, v))
}

// AppKeyContains applies the Contains predicate on the "app_key" field.
func AppKeyContains(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldContains(FieldAppKey, v))
}

// AppKeyHasPrefix applies the HasPrefix predicate on the "app_key" field.
func AppKeyHasPrefix(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldHasPrefix(FieldAppKey, v))
}

// AppKeyHasSuffix applies the HasSuffix predicate on the "app_key" field.
func AppKeyHasSuffix(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldHasSuffix(FieldAppKey, v))
}

// AppKeyEqualFold applies the EqualFold predicate on the "app_key" field.
func AppKeyEqualFold(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldEqualFold(FieldAppKey, v))
}

// AppKeyContainsFold applies the ContainsFold predicate on the "app_key" field.
func AppKeyContainsFold(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldContainsFold(FieldAppKey, v))
}

// ActiveIPEQ applies the EQ predicate on the "active_ip" field.
func ActiveIPEQ(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldEQ(FieldActiveIP, v))
}

// ActiveIPNEQ applies the NEQ predicate on the "active_ip" field.
func ActiveIPNEQ(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldNEQ(FieldActiveIP, v))
}

// ActiveIPIn applies the In predicate on the "active_ip" field.
func ActiveIPIn(vs ...string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldIn(FieldActiveIP, vs...))
}

// ActiveIPNotIn applies the NotIn predicate on the "active_ip" field.
func ActiveIPNotIn(vs ...string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldNotIn(FieldActiveIP, vs...))
}

// ActiveIPGT applies the GT predicate on the "active_ip" field.
func ActiveIPGT(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldGT(FieldActiveIP, v))
}

// ActiveIPGTE applies the GTE predicate on the "active_ip" field.
func ActiveIPGTE(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldGTE(FieldActiveIP, v))
}

// ActiveIPLT applies the LT predicate on the "active_ip" field.
func ActiveIPLT(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldLT(FieldActiveIP, v))
}

// ActiveIPLTE applies the LTE predicate on the "active_ip" field.
func ActiveIPLTE(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldLTE(FieldActiveIP, v))
}

// ActiveIPContains applies the Contains predicate on the "active_ip" field.
func ActiveIPContains(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldContains(FieldActiveIP, v))
}

// ActiveIPHasPrefix applies the HasPrefix predicate on the "active_ip" field.
func ActiveIPHasPrefix(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldHasPrefix(FieldActiveIP, v))
}

// ActiveIPHasSuffix applies the HasSuffix predicate on the "active_ip" field.
func ActiveIPHasSuffix(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldHasSuffix(FieldActiveIP, v))
}

// ActiveIPEqualFold applies the EqualFold predicate on the "active_ip" field.
func ActiveIPEqualFold(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldEqualFold(FieldActiveIP, v))
}

// ActiveIPContainsFold applies the ContainsFold predicate on the "active_ip" field.
func ActiveIPContainsFold(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldContainsFold(FieldActiveIP, v))
}

// DeviceSnEQ applies the EQ predicate on the "device_sn" field.
func DeviceSnEQ(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldEQ(FieldDeviceSn, v))
}

// DeviceSnNEQ applies the NEQ predicate on the "device_sn" field.
func DeviceSnNEQ(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldNEQ(FieldDeviceSn, v))
}

// DeviceSnIn applies the In predicate on the "device_sn" field.
func DeviceSnIn(vs ...string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldIn(FieldDeviceSn, vs...))
}

// DeviceSnNotIn applies the NotIn predicate on the "device_sn" field.
func DeviceSnNotIn(vs ...string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldNotIn(FieldDeviceSn, vs...))
}

// DeviceSnGT applies the GT predicate on the "device_sn" field.
func DeviceSnGT(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldGT(FieldDeviceSn, v))
}

// DeviceSnGTE applies the GTE predicate on the "device_sn" field.
func DeviceSnGTE(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldGTE(FieldDeviceSn, v))
}

// DeviceSnLT applies the LT predicate on the "device_sn" field.
func DeviceSnLT(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldLT(FieldDeviceSn, v))
}

// DeviceSnLTE applies the LTE predicate on the "device_sn" field.
func DeviceSnLTE(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldLTE(FieldDeviceSn, v))
}

// DeviceSnContains applies the Contains predicate on the "device_sn" field.
func DeviceSnContains(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldContains(FieldDeviceSn, v))
}

// DeviceSnHasPrefix applies the HasPrefix predicate on the "device_sn" field.
func DeviceSnHasPrefix(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldHasPrefix(FieldDeviceSn, v))
}

// DeviceSnHasSuffix applies the HasSuffix predicate on the "device_sn" field.
func DeviceSnHasSuffix(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldHasSuffix(FieldDeviceSn, v))
}

// DeviceSnEqualFold applies the EqualFold predicate on the "device_sn" field.
func DeviceSnEqualFold(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldEqualFold(FieldDeviceSn, v))
}

// DeviceSnContainsFold applies the ContainsFold predicate on the "device_sn" field.
func DeviceSnContainsFold(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldContainsFold(FieldDeviceSn, v))
}

// DeviceMACEQ applies the EQ predicate on the "device_mac" field.
func DeviceMACEQ(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldEQ(FieldDeviceMAC, v))
}

// DeviceMACNEQ applies the NEQ predicate on the "device_mac" field.
func DeviceMACNEQ(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldNEQ(FieldDeviceMAC, v))
}

// DeviceMACIn applies the In predicate on the "device_mac" field.
func DeviceMACIn(vs ...string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldIn(FieldDeviceMAC, vs...))
}

// DeviceMACNotIn applies the NotIn predicate on the "device_mac" field.
func DeviceMACNotIn(vs ...string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldNotIn(FieldDeviceMAC, vs...))
}

// DeviceMACGT applies the GT predicate on the "device_mac" field.
func DeviceMACGT(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldGT(FieldDeviceMAC, v))
}

// DeviceMACGTE applies the GTE predicate on the "device_mac" field.
func DeviceMACGTE(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldGTE(FieldDeviceMAC, v))
}

// DeviceMACLT applies the LT predicate on the "device_mac" field.
func DeviceMACLT(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldLT(FieldDeviceMAC, v))
}

// DeviceMACLTE applies the LTE predicate on the "device_mac" field.
func DeviceMACLTE(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldLTE(FieldDeviceMAC, v))
}

// DeviceMACContains applies the Contains predicate on the "device_mac" field.
func DeviceMACContains(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldContains(FieldDeviceMAC, v))
}

// DeviceMACHasPrefix applies the HasPrefix predicate on the "device_mac" field.
func DeviceMACHasPrefix(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldHasPrefix(FieldDeviceMAC, v))
}

// DeviceMACHasSuffix applies the HasSuffix predicate on the "device_mac" field.
func DeviceMACHasSuffix(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldHasSuffix(FieldDeviceMAC, v))
}

// DeviceMACEqualFold applies the EqualFold predicate on the "device_mac" field.
func DeviceMACEqualFold(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldEqualFold(FieldDeviceMAC, v))
}

// DeviceMACContainsFold applies the ContainsFold predicate on the "device_mac" field.
func DeviceMACContainsFold(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldContainsFold(FieldDeviceMAC, v))
}

// DeviceIdentityEQ applies the EQ predicate on the "device_identity" field.
func DeviceIdentityEQ(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldEQ(FieldDeviceIdentity, v))
}

// DeviceIdentityNEQ applies the NEQ predicate on the "device_identity" field.
func DeviceIdentityNEQ(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldNEQ(FieldDeviceIdentity, v))
}

// DeviceIdentityIn applies the In predicate on the "device_identity" field.
func DeviceIdentityIn(vs ...string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldIn(FieldDeviceIdentity, vs...))
}

// DeviceIdentityNotIn applies the NotIn predicate on the "device_identity" field.
func DeviceIdentityNotIn(vs ...string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldNotIn(FieldDeviceIdentity, vs...))
}

// DeviceIdentityGT applies the GT predicate on the "device_identity" field.
func DeviceIdentityGT(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldGT(FieldDeviceIdentity, v))
}

// DeviceIdentityGTE applies the GTE predicate on the "device_identity" field.
func DeviceIdentityGTE(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldGTE(FieldDeviceIdentity, v))
}

// DeviceIdentityLT applies the LT predicate on the "device_identity" field.
func DeviceIdentityLT(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldLT(FieldDeviceIdentity, v))
}

// DeviceIdentityLTE applies the LTE predicate on the "device_identity" field.
func DeviceIdentityLTE(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldLTE(FieldDeviceIdentity, v))
}

// DeviceIdentityContains applies the Contains predicate on the "device_identity" field.
func DeviceIdentityContains(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldContains(FieldDeviceIdentity, v))
}

// DeviceIdentityHasPrefix applies the HasPrefix predicate on the "device_identity" field.
func DeviceIdentityHasPrefix(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldHasPrefix(FieldDeviceIdentity, v))
}

// DeviceIdentityHasSuffix applies the HasSuffix predicate on the "device_identity" field.
func DeviceIdentityHasSuffix(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldHasSuffix(FieldDeviceIdentity, v))
}

// DeviceIdentityEqualFold applies the EqualFold predicate on the "device_identity" field.
func DeviceIdentityEqualFold(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldEqualFold(FieldDeviceIdentity, v))
}

// DeviceIdentityContainsFold applies the ContainsFold predicate on the "device_identity" field.
func DeviceIdentityContainsFold(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldContainsFold(FieldDeviceIdentity, v))
}

// ActiveDateEQ applies the EQ predicate on the "active_date" field.
func ActiveDateEQ(v time.Time) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldEQ(FieldActiveDate, v))
}

// ActiveDateNEQ applies the NEQ predicate on the "active_date" field.
func ActiveDateNEQ(v time.Time) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldNEQ(FieldActiveDate, v))
}

// ActiveDateIn applies the In predicate on the "active_date" field.
func ActiveDateIn(vs ...time.Time) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldIn(FieldActiveDate, vs...))
}

// ActiveDateNotIn applies the NotIn predicate on the "active_date" field.
func ActiveDateNotIn(vs ...time.Time) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldNotIn(FieldActiveDate, vs...))
}

// ActiveDateGT applies the GT predicate on the "active_date" field.
func ActiveDateGT(v time.Time) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldGT(FieldActiveDate, v))
}

// ActiveDateGTE applies the GTE predicate on the "active_date" field.
func ActiveDateGTE(v time.Time) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldGTE(FieldActiveDate, v))
}

// ActiveDateLT applies the LT predicate on the "active_date" field.
func ActiveDateLT(v time.Time) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldLT(FieldActiveDate, v))
}

// ActiveDateLTE applies the LTE predicate on the "active_date" field.
func ActiveDateLTE(v time.Time) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldLTE(FieldActiveDate, v))
}

// ActiveTypeEQ applies the EQ predicate on the "active_type" field.
func ActiveTypeEQ(v int64) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldEQ(FieldActiveType, v))
}

// ActiveTypeNEQ applies the NEQ predicate on the "active_type" field.
func ActiveTypeNEQ(v int64) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldNEQ(FieldActiveType, v))
}

// ActiveTypeIn applies the In predicate on the "active_type" field.
func ActiveTypeIn(vs ...int64) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldIn(FieldActiveType, vs...))
}

// ActiveTypeNotIn applies the NotIn predicate on the "active_type" field.
func ActiveTypeNotIn(vs ...int64) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldNotIn(FieldActiveType, vs...))
}

// ActiveTypeGT applies the GT predicate on the "active_type" field.
func ActiveTypeGT(v int64) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldGT(FieldActiveType, v))
}

// ActiveTypeGTE applies the GTE predicate on the "active_type" field.
func ActiveTypeGTE(v int64) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldGTE(FieldActiveType, v))
}

// ActiveTypeLT applies the LT predicate on the "active_type" field.
func ActiveTypeLT(v int64) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldLT(FieldActiveType, v))
}

// ActiveTypeLTE applies the LTE predicate on the "active_type" field.
func ActiveTypeLTE(v int64) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldLTE(FieldActiveType, v))
}

// ActiveFileEQ applies the EQ predicate on the "active_file" field.
func ActiveFileEQ(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldEQ(FieldActiveFile, v))
}

// ActiveFileNEQ applies the NEQ predicate on the "active_file" field.
func ActiveFileNEQ(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldNEQ(FieldActiveFile, v))
}

// ActiveFileIn applies the In predicate on the "active_file" field.
func ActiveFileIn(vs ...string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldIn(FieldActiveFile, vs...))
}

// ActiveFileNotIn applies the NotIn predicate on the "active_file" field.
func ActiveFileNotIn(vs ...string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldNotIn(FieldActiveFile, vs...))
}

// ActiveFileGT applies the GT predicate on the "active_file" field.
func ActiveFileGT(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldGT(FieldActiveFile, v))
}

// ActiveFileGTE applies the GTE predicate on the "active_file" field.
func ActiveFileGTE(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldGTE(FieldActiveFile, v))
}

// ActiveFileLT applies the LT predicate on the "active_file" field.
func ActiveFileLT(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldLT(FieldActiveFile, v))
}

// ActiveFileLTE applies the LTE predicate on the "active_file" field.
func ActiveFileLTE(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldLTE(FieldActiveFile, v))
}

// ActiveFileContains applies the Contains predicate on the "active_file" field.
func ActiveFileContains(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldContains(FieldActiveFile, v))
}

// ActiveFileHasPrefix applies the HasPrefix predicate on the "active_file" field.
func ActiveFileHasPrefix(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldHasPrefix(FieldActiveFile, v))
}

// ActiveFileHasSuffix applies the HasSuffix predicate on the "active_file" field.
func ActiveFileHasSuffix(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldHasSuffix(FieldActiveFile, v))
}

// ActiveFileEqualFold applies the EqualFold predicate on the "active_file" field.
func ActiveFileEqualFold(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldEqualFold(FieldActiveFile, v))
}

// ActiveFileContainsFold applies the ContainsFold predicate on the "active_file" field.
func ActiveFileContainsFold(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldContainsFold(FieldActiveFile, v))
}

// VersionEQ applies the EQ predicate on the "version" field.
func VersionEQ(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldEQ(FieldVersion, v))
}

// VersionNEQ applies the NEQ predicate on the "version" field.
func VersionNEQ(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldNEQ(FieldVersion, v))
}

// VersionIn applies the In predicate on the "version" field.
func VersionIn(vs ...string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldIn(FieldVersion, vs...))
}

// VersionNotIn applies the NotIn predicate on the "version" field.
func VersionNotIn(vs ...string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldNotIn(FieldVersion, vs...))
}

// VersionGT applies the GT predicate on the "version" field.
func VersionGT(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldGT(FieldVersion, v))
}

// VersionGTE applies the GTE predicate on the "version" field.
func VersionGTE(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldGTE(FieldVersion, v))
}

// VersionLT applies the LT predicate on the "version" field.
func VersionLT(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldLT(FieldVersion, v))
}

// VersionLTE applies the LTE predicate on the "version" field.
func VersionLTE(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldLTE(FieldVersion, v))
}

// VersionContains applies the Contains predicate on the "version" field.
func VersionContains(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldContains(FieldVersion, v))
}

// VersionHasPrefix applies the HasPrefix predicate on the "version" field.
func VersionHasPrefix(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldHasPrefix(FieldVersion, v))
}

// VersionHasSuffix applies the HasSuffix predicate on the "version" field.
func VersionHasSuffix(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldHasSuffix(FieldVersion, v))
}

// VersionEqualFold applies the EqualFold predicate on the "version" field.
func VersionEqualFold(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldEqualFold(FieldVersion, v))
}

// VersionContainsFold applies the ContainsFold predicate on the "version" field.
func VersionContainsFold(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldContainsFold(FieldVersion, v))
}

// StartDateEQ applies the EQ predicate on the "start_date" field.
func StartDateEQ(v time.Time) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldEQ(FieldStartDate, v))
}

// StartDateNEQ applies the NEQ predicate on the "start_date" field.
func StartDateNEQ(v time.Time) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldNEQ(FieldStartDate, v))
}

// StartDateIn applies the In predicate on the "start_date" field.
func StartDateIn(vs ...time.Time) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldIn(FieldStartDate, vs...))
}

// StartDateNotIn applies the NotIn predicate on the "start_date" field.
func StartDateNotIn(vs ...time.Time) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldNotIn(FieldStartDate, vs...))
}

// StartDateGT applies the GT predicate on the "start_date" field.
func StartDateGT(v time.Time) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldGT(FieldStartDate, v))
}

// StartDateGTE applies the GTE predicate on the "start_date" field.
func StartDateGTE(v time.Time) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldGTE(FieldStartDate, v))
}

// StartDateLT applies the LT predicate on the "start_date" field.
func StartDateLT(v time.Time) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldLT(FieldStartDate, v))
}

// StartDateLTE applies the LTE predicate on the "start_date" field.
func StartDateLTE(v time.Time) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldLTE(FieldStartDate, v))
}

// ExpireDateEQ applies the EQ predicate on the "expire_date" field.
func ExpireDateEQ(v time.Time) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldEQ(FieldExpireDate, v))
}

// ExpireDateNEQ applies the NEQ predicate on the "expire_date" field.
func ExpireDateNEQ(v time.Time) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldNEQ(FieldExpireDate, v))
}

// ExpireDateIn applies the In predicate on the "expire_date" field.
func ExpireDateIn(vs ...time.Time) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldIn(FieldExpireDate, vs...))
}

// ExpireDateNotIn applies the NotIn predicate on the "expire_date" field.
func ExpireDateNotIn(vs ...time.Time) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldNotIn(FieldExpireDate, vs...))
}

// ExpireDateGT applies the GT predicate on the "expire_date" field.
func ExpireDateGT(v time.Time) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldGT(FieldExpireDate, v))
}

// ExpireDateGTE applies the GTE predicate on the "expire_date" field.
func ExpireDateGTE(v time.Time) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldGTE(FieldExpireDate, v))
}

// ExpireDateLT applies the LT predicate on the "expire_date" field.
func ExpireDateLT(v time.Time) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldLT(FieldExpireDate, v))
}

// ExpireDateLTE applies the LTE predicate on the "expire_date" field.
func ExpireDateLTE(v time.Time) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldLTE(FieldExpireDate, v))
}

// AppSdkIDEQ applies the EQ predicate on the "app_sdk_id" field.
func AppSdkIDEQ(v uuid.UUID) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldEQ(FieldAppSdkID, v))
}

// AppSdkIDNEQ applies the NEQ predicate on the "app_sdk_id" field.
func AppSdkIDNEQ(v uuid.UUID) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldNEQ(FieldAppSdkID, v))
}

// AppSdkIDIn applies the In predicate on the "app_sdk_id" field.
func AppSdkIDIn(vs ...uuid.UUID) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldIn(FieldAppSdkID, vs...))
}

// AppSdkIDNotIn applies the NotIn predicate on the "app_sdk_id" field.
func AppSdkIDNotIn(vs ...uuid.UUID) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldNotIn(FieldAppSdkID, vs...))
}

// AppSdkIDIsNil applies the IsNil predicate on the "app_sdk_id" field.
func AppSdkIDIsNil() predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldIsNull(FieldAppSdkID))
}

// AppSdkIDNotNil applies the NotNil predicate on the "app_sdk_id" field.
func AppSdkIDNotNil() predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldNotNull(FieldAppSdkID))
}

// ImeiEQ applies the EQ predicate on the "imei" field.
func ImeiEQ(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldEQ(FieldImei, v))
}

// ImeiNEQ applies the NEQ predicate on the "imei" field.
func ImeiNEQ(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldNEQ(FieldImei, v))
}

// ImeiIn applies the In predicate on the "imei" field.
func ImeiIn(vs ...string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldIn(FieldImei, vs...))
}

// ImeiNotIn applies the NotIn predicate on the "imei" field.
func ImeiNotIn(vs ...string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldNotIn(FieldImei, vs...))
}

// ImeiGT applies the GT predicate on the "imei" field.
func ImeiGT(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldGT(FieldImei, v))
}

// ImeiGTE applies the GTE predicate on the "imei" field.
func ImeiGTE(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldGTE(FieldImei, v))
}

// ImeiLT applies the LT predicate on the "imei" field.
func ImeiLT(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldLT(FieldImei, v))
}

// ImeiLTE applies the LTE predicate on the "imei" field.
func ImeiLTE(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldLTE(FieldImei, v))
}

// ImeiContains applies the Contains predicate on the "imei" field.
func ImeiContains(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldContains(FieldImei, v))
}

// ImeiHasPrefix applies the HasPrefix predicate on the "imei" field.
func ImeiHasPrefix(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldHasPrefix(FieldImei, v))
}

// ImeiHasSuffix applies the HasSuffix predicate on the "imei" field.
func ImeiHasSuffix(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldHasSuffix(FieldImei, v))
}

// ImeiIsNil applies the IsNil predicate on the "imei" field.
func ImeiIsNil() predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldIsNull(FieldImei))
}

// ImeiNotNil applies the NotNil predicate on the "imei" field.
func ImeiNotNil() predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldNotNull(FieldImei))
}

// ImeiEqualFold applies the EqualFold predicate on the "imei" field.
func ImeiEqualFold(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldEqualFold(FieldImei, v))
}

// ImeiContainsFold applies the ContainsFold predicate on the "imei" field.
func ImeiContainsFold(v string) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.FieldContainsFold(FieldImei, v))
}

// HasAppSdk applies the HasEdge predicate on the "app_sdk" edge.
func HasAppSdk() predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, AppSdkTable, AppSdkColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasAppSdkWith applies the HasEdge predicate on the "app_sdk" edge with a given conditions (other predicates).
func HasAppSdkWith(preds ...predicate.AppSdk) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(func(s *sql.Selector) {
		step := newAppSdkStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.ActiveCodeInfo) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.ActiveCodeInfo) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.ActiveCodeInfo) predicate.ActiveCodeInfo {
	return predicate.ActiveCodeInfo(sql.NotPredicates(p))
}
